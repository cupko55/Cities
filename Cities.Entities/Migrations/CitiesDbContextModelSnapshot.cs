// <auto-generated />
using System;
using Cities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cities.Entities.Migrations
{
    [DbContext(typeof(CitiesDbContext))]
    partial class CitiesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cities.Entities.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Cities.Entities.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateUpdated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 248, DateTimeKind.Local).AddTicks(4842),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(541),
                            IsDeleted = false,
                            Name = "Austrija"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2316),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2323),
                            IsDeleted = false,
                            Name = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2441),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2444),
                            IsDeleted = false,
                            Name = "Hrvatska"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2457),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2458),
                            IsDeleted = false,
                            Name = "Slovenija"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2468),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2469),
                            IsDeleted = false,
                            Name = "Srbija"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2481),
                            DateUpdated = new DateTime(2019, 10, 26, 10, 18, 41, 250, DateTimeKind.Local).AddTicks(2483),
                            IsDeleted = false,
                            Name = "Mađarska"
                        });
                });

            modelBuilder.Entity("Cities.Entities.Entities.City", b =>
                {
                    b.HasOne("Cities.Entities.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
